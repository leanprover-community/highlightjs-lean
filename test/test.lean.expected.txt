<span class="hljs-keyword">import</span> data.real.basic analysis.topology.topological_structures
<span class="hljs-keyword">open</span> lattice set filter classical
<span class="hljs-meta">noncomputable</span> <span class="hljs-keyword">theory</span>

<span class="hljs-keyword">universes</span> u v w
<span class="hljs-keyword">variables</span> {α : <span class="hljs-built_in">Type</span> u} {β : <span class="hljs-built_in">Type</span> v} {γ : <span class="hljs-built_in">Type</span> w}

<span class="hljs-meta">@[simp]</span>
<span class="hljs-theorem"><span class="hljs-keyword">lemma</span> <span class="hljs-title">tauto</span> <span class="hljs-symbol">:</span></span> <span class="hljs-literal">tt</span> = <span class="hljs-literal">tt</span> <span class="hljs-symbol">:=</span> <span class="hljs-built_in">rfl</span>

<span class="hljs-meta">attribute [simp] zero_eq_zero</span>

<span class="hljs-doctag">/-- Metric space
Each metric space induces a canonical `uniform_space` and hence a
canonical `topological_space`.  -/</span>
<span class="hljs-theorem"><span class="hljs-keyword">class</span> <span class="hljs-title">metric_space</span> <span class="hljs-params">(α : <span class="hljs-built_in">Type</span> u)</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">uniform_space</span> α <span class="hljs-symbol">:</span></span> <span class="hljs-built_in">Type</span> u <span class="hljs-symbol">:=</span>
(dist : α → α → ℝ)
(dist_self : <span class="hljs-keyword">∀</span> x : α, dist x x = <span class="hljs-number">0</span>)
(eq_of_dist_eq_zero : <span class="hljs-keyword">∀</span> {x y : α}, dist x y = <span class="hljs-number">0</span> → x = y)
(dist_comm : <span class="hljs-keyword">∀</span> x y : α, dist x y = dist y x)
(dist_triangle : <span class="hljs-keyword">∀</span> x y z : α, dist x z ≤ dist x y + dist y z)
(uniformity_dist : uniformity = ⨅ ε&gt;<span class="hljs-number">0</span>, principal {p:α×α | dist p.<span class="hljs-number">1</span> p.<span class="hljs-number">2</span> &lt; ε} . control_laws_tac)
(to_uniform_space <span class="hljs-symbol">:=</span> metric_space.uniform_space_of_dist dist dist_self dist_comm dist_triangle)


<span class="hljs-theorem"><span class="hljs-keyword">theorem</span> <span class="hljs-title">tendsto_nhds_of_metric</span> <span class="hljs-params">[metric_space β]</span> <span class="hljs-params">{f : α → β}</span> <span class="hljs-params">{a b}</span> <span class="hljs-symbol">:</span></span>
  tendsto f (nhds a) (nhds b) ↔ <span class="hljs-keyword">∀</span> ε &gt; <span class="hljs-number">0</span>,
    <span class="hljs-keyword">∃</span> δ &gt; <span class="hljs-number">0</span>, <span class="hljs-keyword">∀</span>{x:α}, dist x a &lt; δ → dist (f x) b &lt; ε <span class="hljs-symbol">:=</span>
⟨<span class="hljs-keyword">λ</span> H ε ε<span class="hljs-number">0</span>, mem_nhds_iff_metric.<span class="hljs-number">1</span> (H (ball_mem_nhds _ ε<span class="hljs-number">0</span>)),
 <span class="hljs-keyword">λ</span> H s hs,
  <span class="hljs-keyword">let</span> ⟨ε, ε<span class="hljs-number">0</span>, hε⟩ <span class="hljs-symbol">:=</span> mem_nhds_iff_metric.<span class="hljs-number">1</span> hs, ⟨δ, δ<span class="hljs-number">0</span>, hδ⟩ <span class="hljs-symbol">:=</span> H _ ε<span class="hljs-number">0</span> <span class="hljs-keyword">in</span>
mem_nhds_iff_metric.<span class="hljs-number">2</span> ⟨δ, δ<span class="hljs-number">0</span>, <span class="hljs-keyword">λ</span> x h, hε (hδ h)⟩⟩ <span class="hljs-comment">-- dash comment</span>
